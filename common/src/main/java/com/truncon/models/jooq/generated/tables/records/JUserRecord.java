/*
 * This file is generated by jOOQ.
 */
package com.truncon.models.jooq.generated.tables.records;


import com.truncon.models.jooq.generated.tables.JUser;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JUserRecord extends UpdatableRecordImpl<JUserRecord> implements Record10<Long, String, String, String, String, LocalDateTime, Integer, LocalDateTime, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user.preferred_name</code>.
     */
    public void setPreferredName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user.preferred_name</code>.
     */
    public String getPreferredName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user.salt</code>.
     */
    public void setSalt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user.salt</code>.
     */
    public String getSalt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user.creation_date_time</code>.
     */
    public void setCreationDateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user.creation_date_time</code>.
     */
    public LocalDateTime getCreationDateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.user.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.user.modification_date_time</code>.
     */
    public void setModificationDateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.user.modification_date_time</code>.
     */
    public LocalDateTime getModificationDateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.user.modified_by_user_id</code>.
     */
    public void setModifiedByUserId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.user.modified_by_user_id</code>.
     */
    public Integer getModifiedByUserId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.user.db_revision</code>.
     */
    public void setDbRevision(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.user.db_revision</code>.
     */
    public Long getDbRevision() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, String, LocalDateTime, Integer, LocalDateTime, Integer, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, String, String, LocalDateTime, Integer, LocalDateTime, Integer, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JUser.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return JUser.USER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return JUser.USER.PREFERRED_NAME;
    }

    @Override
    public Field<String> field4() {
        return JUser.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return JUser.USER.SALT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JUser.USER.CREATION_DATE_TIME;
    }

    @Override
    public Field<Integer> field7() {
        return JUser.USER.CREATED_BY_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return JUser.USER.MODIFICATION_DATE_TIME;
    }

    @Override
    public Field<Integer> field9() {
        return JUser.USER.MODIFIED_BY_USER_ID;
    }

    @Override
    public Field<Long> field10() {
        return JUser.USER.DB_REVISION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPreferredName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public LocalDateTime component6() {
        return getCreationDateTime();
    }

    @Override
    public Integer component7() {
        return getCreatedByUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getModificationDateTime();
    }

    @Override
    public Integer component9() {
        return getModifiedByUserId();
    }

    @Override
    public Long component10() {
        return getDbRevision();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPreferredName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public LocalDateTime value6() {
        return getCreationDateTime();
    }

    @Override
    public Integer value7() {
        return getCreatedByUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getModificationDateTime();
    }

    @Override
    public Integer value9() {
        return getModifiedByUserId();
    }

    @Override
    public Long value10() {
        return getDbRevision();
    }

    @Override
    public JUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JUserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public JUserRecord value3(String value) {
        setPreferredName(value);
        return this;
    }

    @Override
    public JUserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public JUserRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public JUserRecord value6(LocalDateTime value) {
        setCreationDateTime(value);
        return this;
    }

    @Override
    public JUserRecord value7(Integer value) {
        setCreatedByUserId(value);
        return this;
    }

    @Override
    public JUserRecord value8(LocalDateTime value) {
        setModificationDateTime(value);
        return this;
    }

    @Override
    public JUserRecord value9(Integer value) {
        setModifiedByUserId(value);
        return this;
    }

    @Override
    public JUserRecord value10(Long value) {
        setDbRevision(value);
        return this;
    }

    @Override
    public JUserRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, Integer value7, LocalDateTime value8, Integer value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JUserRecord
     */
    public JUserRecord() {
        super(JUser.USER);
    }

    /**
     * Create a detached, initialised JUserRecord
     */
    public JUserRecord(Long id, String email, String preferredName, String password, String salt, LocalDateTime creationDateTime, Integer createdByUserId, LocalDateTime modificationDateTime, Integer modifiedByUserId, Long dbRevision) {
        super(JUser.USER);

        setId(id);
        setEmail(email);
        setPreferredName(preferredName);
        setPassword(password);
        setSalt(salt);
        setCreationDateTime(creationDateTime);
        setCreatedByUserId(createdByUserId);
        setModificationDateTime(modificationDateTime);
        setModifiedByUserId(modifiedByUserId);
        setDbRevision(dbRevision);
    }
}
